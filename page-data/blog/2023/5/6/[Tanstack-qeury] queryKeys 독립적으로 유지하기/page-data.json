{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/2023/5/6/[Tanstack-qeury] queryKeys 독립적으로 유지하기/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3 id=\"querykeys-독립적으로-유지하기\" style=\"position:relative;\"><a href=\"#querykeys-%EB%8F%85%EB%A6%BD%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%9C%A0%EC%A7%80%ED%95%98%EA%B8%B0\" aria-label=\"querykeys 독립적으로 유지하기 permalink\" class=\"headerElement before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>queryKeys 독립적으로 유지하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// useRevisitRateQuery</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useRevisitRateQuery</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedIsland<span class=\"token punctuation\">,</span> setSelectedIsland<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'jejodo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedDate<span class=\"token punctuation\">,</span> setSelectedDate<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPreviousWeekDates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> fallback<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> revisitRate <span class=\"token operator\">=</span> fallback <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQuery</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>queryKeys<span class=\"token punctuation\">.</span>stayTime<span class=\"token punctuation\">,</span> selectedIsland<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      <span class=\"token function\">getRevisitRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        island<span class=\"token operator\">:</span> selectedIsland<span class=\"token punctuation\">,</span>\n        startDate<span class=\"token operator\">:</span> selectedDate<span class=\"token punctuation\">.</span>startOfLastWeek<span class=\"token punctuation\">,</span>\n        endDate<span class=\"token operator\">:</span> selectedDate<span class=\"token punctuation\">.</span>endOfLastWeek<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">select</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">snakeCaseToCamelCaseObject</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> revisitRate <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useRevisitRateQuery<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// useStayTimeQuery</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useStayTimeQuery</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedIsland<span class=\"token punctuation\">,</span> setSelectedIsland<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'jejodo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> fallback<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> stayTime <span class=\"token operator\">=</span> fallback <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQuery</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>queryKeys<span class=\"token punctuation\">.</span>stayTime<span class=\"token punctuation\">,</span> selectedIsland<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getStayTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> island<span class=\"token operator\">:</span> selectedIsland <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">select</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">snakeCaseToCamelCaseObject</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> stayTime <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useStayTimeQuery<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>두 파일의 API 호출은 각각 다르게 구성되어있다.(API 호출하는 url이 각각 다름)\n<ul>\n<li>하지만 둘은 “같은 결과값을 Return한다”</li>\n</ul>\n</li>\n<li>이유는 <code class=\"language-text\">queryKey</code>가 같기 때문이다. 배열일 경우 순서에도 영향을 받는다.\n<ul>\n<li>순서가 다르면 각각의 API 요청에 맞게 응답으로 “다른 결과값을 Return 한다”</li>\n<li><code class=\"language-text\">[queryKeys.stayTime, selectedIsland]</code> → <code class=\"language-text\">[selectedIsland, queryKeys.stayTime]</code>\n<ul>\n<li>순서만 바꾸어도 다르게 인식되어 정상적으로 API를 호출해준다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>회사에서 queryKeys를 객체로 관리하고 있는데, 분명 다른 API를 호출하였으나, 같은 결과값이 리턴되었다.</li>\n<li>알고보니, 쿼리키를 중복해서 사용하고 있었던 것, 개별적으로 queryKey를 지정해주니 정상적인 API 호출이 가능해짐.</li>\n</ul>\n<br>\n<h3 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"headerElement before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h3>\n<p><a href=\"https://tanstack.com/query/latest/docs/react/guides/query-keys\" target=\"_blank\" rel=\"nofollow\">tanstack-query 공식문서 query keys</a><br>\n<a href=\"https://www.zigae.com/react-query-key/\" target=\"_blank\" rel=\"nofollow\">React Query Key 관리</a></p>","tableOfContents":"<ul>\n<li><a href=\"#querykeys-%EB%8F%85%EB%A6%BD%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%9C%A0%EC%A7%80%ED%95%98%EA%B8%B0\">queryKeys 독립적으로 유지하기</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">참고자료</a></li>\n</ul>","frontmatter":{"title":"[Tanstack-query] queryKeys 독립적으로 유지하기","summary":"-","date":"2023.05.06.","categories":["개발"]}}}]}},"pageContext":{"slug":"/blog/2023/5/6/[Tanstack-qeury] queryKeys 독립적으로 유지하기/"}},"staticQueryHashes":["1629908903"]}